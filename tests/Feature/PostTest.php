<?php

namespace Tests\Feature;

use App\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

class PostTest extends TestCase
{

    private $post_data = array();
    private $user = null;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->post_data = [
            'en_title' => 'English Title',
            'ar_title' => 'Arabic Title',
            'en_body' => 'English body',
            'ar_body' => 'Arabic body',
            'logo' => 'C:\Users\phantomsage\Desktop\nsd webiste\NSD Website V0.2\NSD LOGO White.png',
            'lang' => 'en'
        ];
        $this->user = factory(User::class)->make();
    }

    /**
     * Test post index route
     *
     * @return void
     */
    public function testPostIndex()
    {
        /*
         * /posts/{lang}
         * */
        $this->get('/posts/en')->assertStatus(200);
        $this->get('/posts/ar')->assertStatus(200);
        $this->get('/posts/fr')->assertStatus(404);
        $this->get('/posts/fr23a')->assertStatus(404);

        $this->actingAs(factory(User::class)->make())->get('/posts/en')->assertStatus(200);
        $this->actingAs(factory(User::class)->make())->get('/posts/ar')->assertStatus(200);
        $this->actingAs(factory(User::class)->make())->get('/posts/fr')->assertStatus(404);
        $this->actingAs(factory(User::class)->make())->get('/posts/fr12aa')->assertStatus(404);
    }


    /**
     * Test post create route
     *
     * @return void
     */
    public function testPostCreate()
    {
        $this->get('/posts/create/en')->assertStatus(302);
        $this->get('/posts/create/ar')->assertStatus(302);
        $this->get('/posts/create/fr')->assertStatus(302);
        $this->get('/posts/create/fr12a')->assertStatus(404);

        $this->actingAs(factory(User::class)->make())->get('/posts/create/en')->assertStatus(200);
        $this->actingAs(factory(User::class)->make())->get('/posts/create/ar')->assertStatus(200);
        $this->actingAs(factory(User::class)->make())->get('/posts/create/fr')->assertStatus(404);
        $this->actingAs(factory(User::class)->make())->get('/posts/create/fr123')->assertStatus(404);
    }


    /**
     * Test post show route
     *
     * @return void
     */
    public function testPostShow()
    {
        $this->get('/posts/1/en')->assertStatus(200);
        $this->get('/posts/1/ar')->assertStatus(200);
        $this->get('/posts/1/fr')->assertStatus(404);
        $this->get('/posts/1/fr121')->assertStatus(404);


        $this->get('/posts/11/en')->assertStatus(404);
        $this->get('/posts/11/ar')->assertStatus(404);
        $this->get('/posts/11/fr')->assertStatus(404);
        $this->get('/posts/11/frqwq')->assertStatus(404);


        $this->actingAs(factory(User::class)->make())->get('/posts/1/en')->assertStatus(200);
        $this->actingAs(factory(User::class)->make())->get('/posts/1/ar')->assertStatus(200);
        $this->actingAs(factory(User::class)->make())->get('/posts/1/fr')->assertStatus(404);
        $this->actingAs(factory(User::class)->make())->get('/posts/1/fr123')->assertStatus(404);


        $this->actingAs(factory(User::class)->make())->get('/posts/11/en')->assertStatus(404);
        $this->actingAs(factory(User::class)->make())->get('/posts/11/ar')->assertStatus(404);
        $this->actingAs(factory(User::class)->make())->get('/posts/11/fr')->assertStatus(404);
        $this->actingAs(factory(User::class)->make())->get('/posts/11/fr123')->assertStatus(404);
    }


    /**
     * Test post show route
     *
     * @return void
     */
    public function testPostEdit()
    {
        $this->get('/posts/edit/1/en')->assertStatus(302);
        $this->get('/posts/edit/1/ar')->assertStatus(302);
        $this->get('/posts/edit/1/fr')->assertStatus(302);
        $this->get('/posts/edit/1/fr123')->assertStatus(404);

        $this->get('/posts/edit/11/en')->assertStatus(302);
        $this->get('/posts/edit/11/ar')->assertStatus(302);
        $this->get('/posts/edit/11/fr')->assertStatus(302);
        $this->get('/posts/edit/11/fr123')->assertStatus(404);


        $this->actingAs(factory(User::class)->make())->get('/posts/edit/1/en')->assertStatus(403);
        $this->actingAs(factory(User::class)->make())->get('/posts/edit/1/ar')->assertStatus(403);
        $this->actingAs(factory(User::class)->make())->get('/posts/edit/1/fr')->assertStatus(404);
        $this->actingAs(factory(User::class)->make())->get('/posts/edit/1/fr123')->assertStatus(404);

        $this->actingAs(factory(User::class)->make())->get('/posts/edit/11/en')->assertStatus(404);
        $this->actingAs(factory(User::class)->make())->get('/posts/edit/11/ar')->assertStatus(404);
        $this->actingAs(factory(User::class)->make())->get('/posts/edit/11/fr')->assertStatus(404);
        $this->actingAs(factory(User::class)->make())->get('/posts/edit/11/fr123')->assertStatus(404);



        $this->actingAs(User::find(1))->get('/posts/edit/1/en')->assertStatus(200);
        $this->actingAs(User::find(1))->get('/posts/edit/1/ar')->assertStatus(200);
        $this->actingAs(User::find(1))->get('/posts/edit/1/fr')->assertStatus(404);
        $this->actingAs(User::find(1))->get('/posts/edit/1/fr123')->assertStatus(404);

        $this->actingAs(User::find(1))->get('/posts/edit/11/en')->assertStatus(404);
        $this->actingAs(User::find(1))->get('/posts/edit/11/ar')->assertStatus(404);
        $this->actingAs(User::find(1))->get('/posts/edit/11/fr')->assertStatus(404);
        $this->actingAs(User::find(1))->get('/posts/edit/11/fr123')->assertStatus(404);


        $this->actingAs(User::find(2))->get('/posts/edit/1/en')->assertStatus(403);
        $this->actingAs(User::find(2))->get('/posts/edit/1/ar')->assertStatus(403);
        $this->actingAs(User::find(2))->get('/posts/edit/1/fr')->assertStatus(404);
        $this->actingAs(User::find(2))->get('/posts/edit/1/fr123')->assertStatus(404);

        $this->actingAs(User::find(2))->get('/posts/edit/2/en')->assertStatus(200);
        $this->actingAs(User::find(2))->get('/posts/edit/2/ar')->assertStatus(200);
        $this->actingAs(User::find(2))->get('/posts/edit/2/fr')->assertStatus(404);
        $this->actingAs(User::find(2))->get('/posts/edit/2/fr123')->assertStatus(404);

        $this->actingAs(User::find(2))->get('/posts/edit/11/en')->assertStatus(404);
        $this->actingAs(User::find(2))->get('/posts/edit/11/ar')->assertStatus(404);
        $this->actingAs(User::find(2))->get('/posts/edit/11/fr')->assertStatus(404);
        $this->actingAs(User::find(2))->get('/posts/edit/11/fr123')->assertStatus(404);

    }

    #/posts/store/{lang}
    /**
     * Test post show route
     *
     * @return void
     */
    public function testPostUpdate()
    {
        //$this->json('POST', '/posts/store/en', $this->post_data)->assertStatus(302);
        $this->withoutMiddleware(\App\Http\Middleware\VerifyCsrfToken::class)
            ->post('/posts/store/en', $this->post_data)
            ->assertStatus(302)
            ->assertRedirect('/login');

        $this->withoutMiddleware(\App\Http\Middleware\VerifyCsrfToken::class)
            ->actingAs($this->user)
            ->post('/posts/store/en', $this->post_data)
            ->assertStatus(302)
            ->assertRedirect(route('index.page'));
    }

}
